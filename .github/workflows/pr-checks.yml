name: PR Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint 2>&1 | tee eslint-report.txt
        continue-on-error: true

      - name: Run Prettier check
        run: npm run format:check 2>&1 | tee prettier-report.txt
        continue-on-error: true

      - name: Comment PR with lint results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let eslintOutput = '';
            let prettierOutput = '';

            try {
              eslintOutput = fs.readFileSync('eslint-report.txt', 'utf8');
            } catch (error) {
              eslintOutput = 'ESLint report not found';
            }

            try {
              prettierOutput = fs.readFileSync('prettier-report.txt', 'utf8');
            } catch (error) {
              prettierOutput = 'Prettier report not found';
            }

            const body = `## 🔍 Lint Check Results

            ### ESLint Results
            \`\`\`
            ${eslintOutput}
            \`\`\`

            ### Prettier Results
            \`\`\`
            ${prettierOutput}
            \`\`\`

            ---
            *This comment was automatically generated by the PR Checks workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build 2>&1 | tee build-report.txt

      - name: Build Storybook
        run: npm run build-storybook 2>&1 | tee storybook-build-report.txt

      - name: Run tests
        run: npm test 2>&1 | tee test-report.txt
        continue-on-error: true

      - name: Calculate bundle size
        run: |
          echo "## Bundle Size Analysis" > bundle-analysis.txt
          echo "" >> bundle-analysis.txt
          if [ -f "dist/index.esm.js" ]; then
            ESM_SIZE=$(stat -c%s "dist/index.esm.js")
            ESM_SIZE_KB=$(echo "scale=2; $ESM_SIZE / 1024" | bc)
            echo "- ESM Bundle: ${ESM_SIZE_KB} KB" >> bundle-analysis.txt
          fi
          if [ -f "dist/index.umd.js" ]; then
            UMD_SIZE=$(stat -c%s "dist/index.umd.js")
            UMD_SIZE_KB=$(echo "scale=2; $UMD_SIZE / 1024" | bc)
            echo "- UMD Bundle: ${UMD_SIZE_KB} KB" >> bundle-analysis.txt
          fi
          echo "" >> bundle-analysis.txt
          echo "### Gzipped Sizes" >> bundle-analysis.txt
          if [ -f "dist/index.esm.js" ]; then
            ESM_GZIP=$(gzip -c "dist/index.esm.js" | wc -c)
            ESM_GZIP_KB=$(echo "scale=2; $ESM_GZIP / 1024" | bc)
            echo "- ESM Bundle (gzipped): ${ESM_GZIP_KB} KB" >> bundle-analysis.txt
          fi
          if [ -f "dist/index.umd.js" ]; then
            UMD_GZIP=$(gzip -c "dist/index.umd.js" | wc -c)
            UMD_GZIP_KB=$(echo "scale=2; $UMD_GZIP / 1024" | bc)
            echo "- UMD Bundle (gzipped): ${UMD_GZIP_KB} KB" >> bundle-analysis.txt
          fi

      - name: Comment PR with build results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let buildOutput = '';
            let storybookOutput = '';
            let testOutput = '';
            let bundleAnalysis = '';

            try {
              buildOutput = fs.readFileSync('build-report.txt', 'utf8');
            } catch (error) {
              buildOutput = 'Build report not found';
            }

            try {
              storybookOutput = fs.readFileSync('storybook-build-report.txt', 'utf8');
            } catch (error) {
              storybookOutput = 'Storybook build report not found';
            }

            try {
              testOutput = fs.readFileSync('test-report.txt', 'utf8');
            } catch (error) {
              testOutput = 'Test report not found';
            }

            try {
              bundleAnalysis = fs.readFileSync('bundle-analysis.txt', 'utf8');
            } catch (error) {
              bundleAnalysis = 'Bundle analysis not available';
            }

            const body = `## 🔨 Build Check Results

            ### Library Build
            \`\`\`
            ${buildOutput.slice(-1000)} // Truncate to last 1000 chars
            \`\`\`

            ### Storybook Build
            \`\`\`
            ${storybookOutput.slice(-1000)} // Truncate to last 1000 chars
            \`\`\`

            ### Test Results
            \`\`\`
            ${testOutput.slice(-1000)} // Truncate to last 1000 chars
            \`\`\`

            ${bundleAnalysis}

            ---
            *This comment was automatically generated by the PR Checks workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  merge-simulation:
    name: Merge Simulation
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies on main
        run: npm ci

      - name: Fetch PR branch
        run: |
          git fetch origin ${{ github.head_ref }}
          git checkout -b pr-branch origin/${{ github.head_ref }}

      - name: Attempt merge simulation
        run: |
          git checkout main
          git merge --no-commit --no-ff pr-branch > merge-simulation.txt 2>&1 || echo "Merge conflicts detected" >> merge-simulation.txt

      - name: Test merged state
        run: |
          if git diff --cached --quiet; then
            echo "No changes to merge" > merge-test.txt
          else
            echo "Testing merged state..." > merge-test.txt
            npm ci >> merge-test.txt 2>&1
            npm run build >> merge-test.txt 2>&1
            npm test >> merge-test.txt 2>&1
          fi
        continue-on-error: true

      - name: Reset merge
        run: git merge --abort 2>/dev/null || git reset --hard HEAD

      - name: Comment PR with merge simulation
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let mergeOutput = '';
            let testOutput = '';

            try {
              mergeOutput = fs.readFileSync('merge-simulation.txt', 'utf8');
            } catch (error) {
              mergeOutput = 'Merge simulation report not found';
            }

            try {
              testOutput = fs.readFileSync('merge-test.txt', 'utf8');
            } catch (error) {
              testOutput = 'Merge test report not found';
            }

            const body = `## 🔀 Merge Simulation Results

            ### Merge Attempt
            \`\`\`
            ${mergeOutput}
            \`\`\`

            ### Post-Merge Testing
            \`\`\`
            ${testOutput.slice(-1500)} // Truncate to last 1500 chars
            \`\`\`

            ---
            *This comment was automatically generated by the PR Checks workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [lint, build, merge-simulation]
    if: always()
    steps:
      - name: Create PR summary
        uses: actions/github-script@v7
        with:
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const buildStatus = '${{ needs.build.result }}';
            const mergeStatus = '${{ needs.merge-simulation.result }}';

            const getEmoji = (status) => {
              switch(status) {
                case 'success': return '✅';
                case 'failure': return '❌';
                case 'cancelled': return '⏹️';
                default: return '⚠️';
              }
            };

            const body = `## 📋 PR Checks Summary

            | Check | Status | Result |
            |-------|--------|--------|
            | Lint Check | ${getEmoji(lintStatus)} | ${lintStatus} |
            | Build Check | ${getEmoji(buildStatus)} | ${buildStatus} |
            | Merge Simulation | ${getEmoji(mergeStatus)} | ${mergeStatus} |

            ${lintStatus === 'success' && buildStatus === 'success' && mergeStatus === 'success' 
              ? '🎉 All checks passed! This PR is ready for review.' 
              : '⚠️ Some checks failed. Please review the detailed reports above.'}

            ---
            *This summary was automatically generated by the PR Checks workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
