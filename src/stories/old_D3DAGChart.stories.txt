import React from 'react';

import type { DAGData, DAGNode, DAGLink } from '../types';
import { D3DAGChart } from '@/components';

export default {
  title: 'Charts/D3DAGChart',
  component: D3DAGChart,
  parameters: {
    layout: 'fullscreen',
  },
};

const Template = (args: React.ComponentProps<typeof D3DAGChart>) => <D3DAGChart {...args} />;

// Sample data for a manufacturing workflow
const manufacturingData: DAGData = {
  nodes: [
    { id: 'raw', name: 'Raw Materials', value: 100, category: 0 },
    { id: 'cut', name: 'Cutting', value: 80, category: 1 },
    { id: 'shape', name: 'Shaping', value: 70, category: 1 },
    { id: 'assemble', name: 'Assembly', value: 90, category: 2 },
    { id: 'paint', name: 'Painting', value: 85, category: 3 },
    { id: 'test', name: 'Testing', value: 95, category: 4 },
    { id: 'ship', name: 'Shipping', value: 99, category: 5 },
  ],
  links: [
    { source: 'raw', target: 'cut', value: 100 },
    { source: 'raw', target: 'shape', value: 80 },
    { source: 'cut', target: 'assemble', value: 90 },
    { source: 'shape', target: 'assemble', value: 85 },
    { source: 'assemble', target: 'paint', value: 95 },
    { source: 'paint', target: 'test', value: 90 },
    { source: 'test', target: 'ship', value: 99 },
  ],
  categories: [
    { name: 'Input', itemStyle: { color: '#5470c6' } },
    { name: 'Processing', itemStyle: { color: '#91cc75' } },
    { name: 'Assembly', itemStyle: { color: '#fac858' } },
    { name: 'Finishing', itemStyle: { color: '#ee6666' } },
    { name: 'Quality', itemStyle: { color: '#73c0de' } },
    { name: 'Output', itemStyle: { color: '#3ba272' } },
  ],
};

export const ManufacturingWorkflow = () => (
  <D3DAGChart
    data={manufacturingData}
    height={600}
    layout="layered"
    direction="LR"
    collapsible={true}
    zoomable={true}
    draggable={true}
    onNodeClick={(node: DAGNode, event: React.MouseEvent) => console.log('Node clicked:', node, event)}
    onNodeDoubleClick={(node: DAGNode, event: React.MouseEvent) => console.log('Node double-clicked:', node, event)}
    onEdgeClick={(link: DAGLink, event: React.MouseEvent) => console.log('Edge clicked:', link, event)}
  />
);

// Complex data with multiple connections
const complexData: DAGData = {
  nodes: [
    { id: 'start', name: 'Start', value: 100, category: 0 },
    { id: 'process1', name: 'Process 1', value: 80, category: 1 },
    { id: 'process2', name: 'Process 2', value: 70, category: 1 },
    { id: 'process3', name: 'Process 3', value: 90, category: 2 },
    { id: 'process4', name: 'Process 4', value: 85, category: 2 },
    { id: 'merge', name: 'Merge Point', value: 95, category: 3 },
    { id: 'end', name: 'End', value: 99, category: 4 },
  ],
  links: [
    { source: 'start', target: 'process1', value: 100 },
    { source: 'start', target: 'process2', value: 80 },
    { source: 'process1', target: 'process3', value: 90 },
    { source: 'process2', target: 'process3', value: 85 },
    { source: 'process2', target: 'process4', value: 75 },
    { source: 'process3', target: 'merge', value: 95 },
    { source: 'process4', target: 'merge', value: 85 },
    { source: 'merge', target: 'end', value: 99 },
  ],
  categories: [
    { name: 'Input', itemStyle: { color: '#5470c6' } },
    { name: 'Stage 1', itemStyle: { color: '#91cc75' } },
    { name: 'Stage 2', itemStyle: { color: '#fac858' } },
    { name: 'Merge', itemStyle: { color: '#ee6666' } },
    { name: 'Output', itemStyle: { color: '#3ba272' } },
  ],
};

export const ComplexPipeline = () => (
  <D3DAGChart
    data={complexData}
    height={600}
    layout="force"
    edgeStyle="curved"
    collapsible={true}
    zoomable={true}
    draggable={true}
  />
);

export const ManhattanEdges = () => (
  <D3DAGChart data={manufacturingData} height={600} layout="layered" direction="TB" edgeStyle="manhattan" />
);
